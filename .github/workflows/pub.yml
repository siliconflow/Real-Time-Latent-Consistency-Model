name: Build LCM

on:
  push:
    branches:
      - main
      - 1f-img
  schedule:
    # every 6 hours
    - cron: "0 */6 * * *"
  workflow_dispatch:

env:
  REGION_ID: cn-beijing
  REGISTRY: registry.cn-beijing.aliyuncs.com
  NAMESPACE: oneflow

concurrency:
  group: sd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-oneflow:
    name: Build sd ${{ matrix.image.repo }}:${{ matrix.image.suffix }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        image:
          - {
              suffix: "cu121",
              repo: "onediff-lcm",
              index: "https://github.com/siliconflow/oneflow_releases/releases/expanded_assets/community_cu121",
            }
          - {
              suffix: "cu121",
              repo: "onediff-lcm-pro",
              index: "https://github.com/siliconflow/oneflow_releases/releases/expanded_assets/enterprise_cu121",
            }

    env:
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: ls -al
      - run: sudo apt-get install ripgrep
      # 1.1 Login to ACR
      - name: Login to ACR with the AccessKey pair
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.${{env.REGION_ID}}.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # 1.2 Build and push image to ACR
      - name: Set env
        run: |
          echo ACR_TAG="$REGISTRY/$NAMESPACE/${{ matrix.image.repo }}:${{ matrix.image.suffix }}" >> $GITHUB_ENV
          echo DOCKERHUB_TAG="oneflowinc/${{ matrix.image.repo }}:${{ matrix.image.suffix }}" >> $GITHUB_ENV
      - name: Get OneFlow version
        id: get-oneflow-version
        run: |
          curl "${{ matrix.image.index }}"
          ONEFLOW_PIP_INDEX=${{ matrix.image.index }}
          DEV_VERSION=$(curl ${{ matrix.image.index }} | rg '/oneflow-(\d.+?)%2B(.+?)-cp' -or '$1+${2}' | head -n 1)
          echo "DEV_VERSION: ${DEV_VERSION}"
          if [ -z "$DEV_VERSION" ]
          then
            exit 1
          fi
          echo "ONEFLOW_PACKAGE_NAME="oneflow==${DEV_VERSION}"" >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.DOCKERHUB_TAG }}
            ${{ env.ACR_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_TAG }}
          cache-to: type=inline
          build-args: |
            ONEFLOW_PIP_INDEX=${{ matrix.image.index }}
            ONEFLOW_PACKAGE_NAME=${{steps.get-oneflow-version.outputs.ONEFLOW_PACKAGE_NAME}}
